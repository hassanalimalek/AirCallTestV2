import { NextPage } from 'next'
import { useState, useEffect } from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Calls from '../collections/calls'
import { useQuery } from '@apollo/client'
import { GRAPHQL_USER } from '../services/GraphQL'
import { loginUser, useUserContext } from '../context'
import { useMutation } from '@apollo/client'

const Home: NextPage = () => {
  const [page, setPage] = useState(1)
  const { state, dispatch } = useUserContext()

  const [performRefreshToken, { loading: load, reset }] = useMutation(
    GRAPHQL_USER.MUTATIONS.REFRESH_TOKEN
  )

  useEffect(() => {
    // Refresh Token aftery every 9 minutes as the token expires after 10 minutes
    let interval: any
    if (state.user && state.refreshToken) {
      interval = setInterval(() => {
        performRefreshToken({
          onCompleted: data => {
            reset()
            dispatch(
              loginUser({
                accessToken: data.refreshTokenV2.access_token,
                refreshToken: data.refreshTokenV2.refresh_token,
                user: data.refreshTokenV2.user
              })
            )
            // router.push('/');
            // Notification(signInNotification)
          },
          onError: error => {
            reset()
            // showServerErrors(error);
          },
          variables: { refreshToken: state?.refreshToken }
        })
      }, 540000)
    } else {
      if (interval) {
        clearInterval(interval)
      }
    }
  }, [state])

  const { loading, error, data, refetch } = useQuery(
    GRAPHQL_USER.QUERIES.GET_CALLS,
    {
      variables: { offset: page * 10, limit: 10 }
    }
  )

  const pageChange = (page: number) => {
    refetch({ offset: page * 10, limit: 10 })
    setPage(page)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Air Call</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Calls
        loading={loading}
        data={data}
        pageChange={pageChange}
        page={page}
        error={error}
      />
    </div>
  )
}

export default Home
